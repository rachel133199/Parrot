[{"/Users/anne/Projects/htnClownSchoolMaj/ui/src/index.js":"1","/Users/anne/Projects/htnClownSchoolMaj/ui/src/App.js":"2","/Users/anne/Projects/htnClownSchoolMaj/ui/src/reportWebVitals.js":"3","/Users/anne/Projects/htnClownSchoolMaj/ui/src/Word.js":"4","/Users/anne/Projects/htnClownSchoolMaj/ui/src/Client.js":"5"},{"size":599,"mtime":1610788085912,"results":"6","hashOfConfig":"7"},{"size":173,"mtime":1610783961168,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610780825752,"results":"9","hashOfConfig":"7"},{"size":340,"mtime":1610780825752,"results":"10","hashOfConfig":"7"},{"size":2818,"mtime":1610788220050,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"dsfd13",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},"/Users/anne/Projects/htnClownSchoolMaj/ui/src/index.js",["26","27","28"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {getWord, submitResults, textToSpeech, assessPronunciation} from './Client'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\ntextToSpeech();\n",["29","30"],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/App.js",[],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/reportWebVitals.js",[],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/Word.js",[],["31","32"],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/Client.js",["33"],"var sdk = require(\"microsoft-cognitiveservices-speech-sdk\");\nvar readline = require(\"readline\");\n\nlet subscriptionKey = \"7c0cb9b8617f487eb23ed60138a8d928\";\nlet serviceRegion = \"westus\";  \nlet language = \"en-US\";\nlet filename = \"Audio.wav\"\n\n\nexport async function getWord() {\n    const response = await fetch('http://127.0.0.1:8001/get_word');\n\n    response.json().then(data => {\n        return data.word;\n    })\n}\n\nexport async function submitResults() {\n    const response = await fetch('http://127.0.0.1:8001/submit_results', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n    response.json().then(data => {\n        return data;\n    })\n}\n\nexport function assessPronunciation() {\n    let pronunciationAssessmentConfig = new sdk.PronunciationAssessmentConfig(\"Hello\",\n    sdk.PronunciationAssessmentGradingSystem.HundredMark,\n    sdk.PronunciationAssessmentGranularity.Word, true);\n\n    let speechRecognizer = sdk.SpeechRecognizer.FromConfig(sdk.speechConfig, sdk.audioConfig);\n    // apply the pronunciation assessment configuration to the speech recognizer\n    pronunciationAssessmentConfig.applyTo(speechRecognizer);\n\n    speechRecognizer.recognizeOnceAsync((result) => {\n        let pronunciationAssessmentResult = sdk.PronunciationAssessmentResult.fromResult(result);\n        let pronunciationScore = sdk.pronResult.pronunciationScore;\n        let wordLevelResult = sdk.pronResult.detailResult.Words;\n        console.log(pronunciationAssessmentResult);\n        console.log(pronunciationScore);\n        console.log(wordLevelResult);\n    },\n    {});\n}\n\n\nexport function textToSpeech() {\n    let audioConfig = sdk.AudioConfig.fromAudioFileOutput(filename);\n    let speechConfig = sdk.SpeechConfig.fromSubscription(subscriptionKey, serviceRegion);\n    // create the speech synthesizer.\n    var synthesizer = new sdk.SpeechSynthesizer(speechConfig, audioConfig);\n\n    var rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n\n    rl.question(\"Type some text that you want to speak...\\n> \", function (text) {\n      rl.close();\n      // start the synthesizer and wait for a result.\n      synthesizer.speakTextAsync(text,\n          function (result) {\n        if (result.reason === sdk.ResultReason.SynthesizingAudioCompleted) {\n          console.log(\"synthesis finished.\");\n        } else {\n          console.error(\"Speech synthesis canceled, \" + result.errorDetails +\n              \"\\nDid you update the subscription info?\");\n        }\n        synthesizer.close();\n        synthesizer = undefined;\n      },\n          function (err) {\n        console.trace(\"err - \" + err);\n        synthesizer.close();\n        synthesizer = undefined;\n      });\n      console.log(\"Now synthesizing to: \" + filename);\n    });\n\n}\n\n",{"ruleId":"34","severity":1,"message":"35","line":6,"column":9,"nodeType":"36","messageId":"37","endLine":6,"endColumn":16},{"ruleId":"34","severity":1,"message":"38","line":6,"column":18,"nodeType":"36","messageId":"37","endLine":6,"endColumn":31},{"ruleId":"34","severity":1,"message":"39","line":6,"column":47,"nodeType":"36","messageId":"37","endLine":6,"endColumn":66},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"34","severity":1,"message":"46","line":6,"column":5,"nodeType":"36","messageId":"37","endLine":6,"endColumn":13},"no-unused-vars","'getWord' is defined but never used.","Identifier","unusedVar","'submitResults' is defined but never used.","'assessPronunciation' is defined but never used.","no-native-reassign",["47"],"no-negated-in-lhs",["48"],["47"],["48"],"'language' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]