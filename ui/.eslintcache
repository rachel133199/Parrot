[{"/Users/anne/Projects/htnClownSchoolMaj/ui/src/index.js":"1","/Users/anne/Projects/htnClownSchoolMaj/ui/src/reportWebVitals.js":"2","/Users/anne/Projects/htnClownSchoolMaj/ui/src/App.js":"3","/Users/anne/Projects/htnClownSchoolMaj/ui/src/SpeakButton.js":"4","/Users/anne/Projects/htnClownSchoolMaj/ui/src/PlayButton.js":"5","/Users/anne/Projects/htnClownSchoolMaj/ui/src/Word.js":"6","/Users/anne/Projects/htnClownSchoolMaj/ui/src/NavBar.js":"7","/Users/anne/Projects/htnClownSchoolMaj/ui/src/Phoneme.js":"8","/Users/anne/Projects/htnClownSchoolMaj/ui/src/record.js":"9","/Users/anne/Projects/htnClownSchoolMaj/ui/src/azure.js":"10"},{"size":547,"mtime":1610837635079,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610780825752,"results":"13","hashOfConfig":"12"},{"size":2434,"mtime":1610855017539,"results":"14","hashOfConfig":"12"},{"size":448,"mtime":1610828667976,"results":"15","hashOfConfig":"12"},{"size":464,"mtime":1610854397413,"results":"16","hashOfConfig":"12"},{"size":452,"mtime":1610825102557,"results":"17","hashOfConfig":"12"},{"size":629,"mtime":1610831000332,"results":"18","hashOfConfig":"12"},{"size":1837,"mtime":1610854981929,"results":"19","hashOfConfig":"12"},{"size":884,"mtime":1610831242700,"results":"20","hashOfConfig":"12"},{"size":1276,"mtime":1610854939978,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"dsfd13",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/anne/Projects/htnClownSchoolMaj/ui/src/index.js",[],["48","49"],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/reportWebVitals.js",[],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/App.js",["50","51","52","53","54","55","56","57"],"import './App.css';\nimport Word from './Word'\nimport SpeakButton from './SpeakButton'\nimport PlayButton from './PlayButton'\nimport Phoneme from './Phoneme'\nimport NavBar from './NavBar'\nimport { useState } from 'react';\nimport { faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { recordAudio, sleep } from \"./record\";\nimport { getSpeech } from './azure';\n\n\nfunction App() {\n  const [word, setWord] = useState({\n    phonemes: [\"P\", \"EH1\", \"R\", \"AH0\", \"T\"],\n    word: \"parrot\"\n  })\n  let phm = word.phonemes\n  phm.map(phm => \"gray\")\n  const [phmCol, setPhmCol] = useState(phm)\n\n  function changeColor() {\n    let original = phmCol.map(c => \"grey\")\n    console.log('color change!')\n    \n    let count = -1\n    let color = phmCol.map(c => {\n      count = count + 1\n      // console.log(word.phonemes[count])\n      if(word.phonemes[count] != undefined) {\n        var last = word.phonemes[count].slice(-1)\n      }\n      if (last == \"2\") {\n        return \"DarkBlue\"\n      } else if (last == \"1\") {\n        return \"BlueViolet\"\n      } else if (last == \"0\") {\n        return \"Plum\"\n      }\n      return (\"gray\")\n    })\n    setPhmCol(color)\n    // setTimeout(function () { setPhmCol(original) }, 700)\n    console.log(phmCol)\n    // console.log(word.phonemes)\n    \n  }\n\n  function changeBackColor(){\n    let original = phmCol.map(c => \"grey\")\n    setPhmCol(original)\n    console.log(\"back\")\n  }\n\n  function getWord() {\n    changeColor()\n    fetch(\"http://127.0.0.1:8001/get_word\")\n      .then(response => response.json())\n      .then(response => {\n        // console.log(response)\n        setWord(response)\n        // console.log(word)\n      });\n\n    return word.word\n  }\n\n  let audio;\n\n  async function record() {\n    const recorder = await recordAudio();\n    recorder.start();\n    await sleep(3000);\n    audio = await recorder.stop();\n  }\n\n  function playback() {\n    audio.play();\n  }\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      {/* <SpeakButton /> */}\n      {/* <span><FontAwesomeIcon className=\"VolumeUp\" icon={faVolumeUp} size=\"10x\"/></span> */}\n      <Word getWord={getWord} word={word.word} changeColor={changeColor} changeBackColor={changeBackColor}/>\n      <Phoneme phmCol={phmCol} phm={word.phonemes} word={word.word} />\n      <SpeakButton onClick={record}/>\n      <PlayButton onClick={playback} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/anne/Projects/htnClownSchoolMaj/ui/src/SpeakButton.js",[],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/PlayButton.js",[],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/Word.js",["58","59"],"import React, { useState } from 'react'\n\nfunction Word(props) {\n    return (\n        <div>\n            <span className=\"Word\">\n                {/* <a href=\"#\" onClick={props.getWord} onMouseOver={props.changeColor} onMouseLeave={props.changeBackColor} >{props.word}</a> */}\n                <a href=\"#\" onClick={props.getWord}>{props.word}</a>\n                {/* <h1>{props.Word}</h1> */}\n            </span>\n        </div>\n    )\n}\n\nexport default Word","/Users/anne/Projects/htnClownSchoolMaj/ui/src/NavBar.js",["60","61","62","63","64"],"import React from 'react';\nimport { faCrow } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport logo from './parrot.png';\n\nfunction NavBar() {\n    return (\n        <Navbar bg=\"outline-primary\">\n            <a href=\"#\">\n                <img src={logo} width=\"50px\" height=\"50px\"></img>\n                <Navbar.Brand href=\"#\">\n                    <h3 className=\"ParrotHome\">Parrot</h3>\n                </Navbar.Brand>\n            </a>\n        </Navbar>\n    )\n}\n\nexport default NavBar","/Users/anne/Projects/htnClownSchoolMaj/ui/src/Phoneme.js",["65"],"import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport Grid from '@material-ui/core/Grid';\nimport {getSpeech} from './azure';\n\nfunction Phoneme(props){\n    var count = -1\n    let phm = props.phm.map(p => {\n        count = count + 1\n        // if(props.phmCol[count] == \"DarkBlue\") {\n        //     p = p.substring(0, p.length - 1)\n        // } else if(props.phmCol[count] == \"BlueViolet\") {\n        //     p = p.substring(0, p.length - 1)\n        // } else if(props.phmCol[count] == \"Plum\") {\n        //     p = p.substring(0, p.length - 1)\n        // }\n        p = p.toLowerCase();\n        if (p[p.length-1] === '0') {\n            p = p.substring(0, p.length-1);\n        } else if (p[p.length-1] === '1' || p[p.length-1] === '2') {\n            p = (<b>{p.substring(0, p.length-1)}</b>);\n        } \n        if (count != props.phm.length-1){\n            return(<span className=\"PhonemeWord\">{p}{'\\u00B7'}</span>);\n        }\n        return(<span className=\"PhonemeWord\">{p}</span>);\n    })\n\n    let audio;\n    \n    async function pronounce(word) {\n        let recording = await getSpeech(word);\n        const audioUrl = URL.createObjectURL(recording);\n        audio = new Audio(audioUrl);\n        audio.play();\n    }\n\n    return(\n        <div className=\"Phoneme\">\n        <Grid \n            container \n            direction=\"row\"\n            alignItems=\"center\" \n            justify=\"center\"\n            spacing={0}\n        >\n            <Grid item sm={1} justify=\"flex-end\"></Grid>\n            <Grid item className=\"PhonemeWord\">[ {phm} ]</Grid>\n            <FontAwesomeIcon className=\"VolumeUp\" icon={faVolumeUp} onClick={() => {pronounce(props.word)}} size=\"8x\" />\n        </Grid>\n        </div>\n    )\n}\n\nexport default Phoneme","/Users/anne/Projects/htnClownSchoolMaj/ui/src/record.js",[],"/Users/anne/Projects/htnClownSchoolMaj/ui/src/azure.js",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":20},{"ruleId":"72","severity":1,"message":"76","line":9,"column":10,"nodeType":"74","messageId":"75","endLine":9,"endColumn":25},{"ruleId":"72","severity":1,"message":"77","line":11,"column":10,"nodeType":"74","messageId":"75","endLine":11,"endColumn":19},{"ruleId":"72","severity":1,"message":"78","line":24,"column":9,"nodeType":"74","messageId":"75","endLine":24,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":31,"column":31,"nodeType":"81","messageId":"82","endLine":31,"endColumn":33},{"ruleId":"79","severity":1,"message":"83","line":34,"column":16,"nodeType":"81","messageId":"82","endLine":34,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":36,"column":23,"nodeType":"81","messageId":"82","endLine":36,"endColumn":25},{"ruleId":"79","severity":1,"message":"83","line":38,"column":23,"nodeType":"81","messageId":"82","endLine":38,"endColumn":25},{"ruleId":"72","severity":1,"message":"84","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":8,"column":17,"nodeType":"87","endLine":8,"endColumn":53},{"ruleId":"72","severity":1,"message":"88","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":25},{"ruleId":"72","severity":1,"message":"89","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":11},{"ruleId":"85","severity":1,"message":"86","line":11,"column":13,"nodeType":"87","endLine":11,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":12,"column":17,"nodeType":"87","endLine":12,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":24,"column":19,"nodeType":"81","messageId":"82","endLine":24,"endColumn":21},{"ruleId":"68","replacedBy":"92"},{"ruleId":"70","replacedBy":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'faVolumeUp' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'getSpeech' is defined but never used.","'original' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'faCrow' is defined but never used.","'Nav' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["94"],["95"],"no-global-assign","no-unsafe-negation"]